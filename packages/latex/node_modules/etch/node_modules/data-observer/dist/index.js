var _interopRequireWildcard = function (obj) { return obj && obj.__esModule ? obj : { 'default': obj }; };

var _bind = Function.prototype.bind;
Object.defineProperty(exports, '__esModule', {
  value: true
});
exports['default'] = observe;

var _ArrayObservation = require('./array-observation');

var _ArrayObservation2 = _interopRequireWildcard(_ArrayObservation);

var _ObjectObservation = require('./object-observation');

var _ObjectObservation2 = _interopRequireWildcard(_ObjectObservation);

'use babel';

function observe(object) {
  for (var _len = arguments.length, rest = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    rest[_key - 1] = arguments[_key];
  }

  if (Array.isArray(object)) {
    var fn = rest[0];

    var observation = new _ArrayObservation2['default'](object);
    return fn ? observation.map(fn) : observation;
  } else {
    return new (_bind.apply(_ObjectObservation2['default'], [null].concat([object], rest)))();
  }
}

module.exports = exports['default'];